generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// models

model user {
  id        Int        @id @default(autoincrement())
  email     String?    @unique
  password  String?    @db.VarChar(255)
  name      String?    @db.VarChar(255)
  document  String?    @db.VarChar(50)
  level     Role       @default(AFFILIATE)
  status    Int?       @default(0)
  path      String?    @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  raffle    raffle[]
  customer  customer[]
  order     order[]

  @@map("users")
}

model order {
  id         Int       @id @default(autoincrement())
  raffle     raffle?   @relation(fields: [raffleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customer   customer? @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customerId Int?
  raffleId   Int?
  number     Int?
  code       String?
  situation  String?
  payment    String?
  status     Int?
  user       user?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("orders")
}

model raffle {
  id        Int       @id @default(autoincrement())
  name      String?
  datetime  DateTime?
  price     Float?
  quantity  Int?
  path      String?   @db.Text()
  situation Situation @default(ACTIVE)
  user      user?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int?
  status    Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  order     order[]

  @@map("raffles")
}

model customer {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  password  String?
  telefone  String?
  status    Int?
  userId    Int?
  user      user?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orders    order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

enum Role {
  USER
  ADMIN
  AFFILIATE
}

enum Situation {
  PENDING
  ACTIVE
  EXPIRED
  FINISHED
}
